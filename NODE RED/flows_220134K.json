[
    {
        "id": "b8f3a2e5.7c9d1",
        "type": "tab",
        "label": "Medibox Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e4f5a6b7.c8d9e0",
        "type": "mqtt in",
        "z": "b8f3a2e5.7c9d1",
        "name": "Light Intensity",
        "topic": "medibox/220134K1_light",
        "qos": "2",
        "datatype": "auto",
        "broker": "a1b2c3d4.e5f6a7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 100,
        "wires": [
            [
                "light_format_node",
                "a6b7c8d9.e0f1a2",
                "c0d1e2f3.a4b5c6"
            ]
        ]
    },
    {
        "id": "light_format_node",
        "type": "function",
        "z": "b8f3a2e5.7c9d1",
        "name": "Format Light",
        "func": "msg.payload = Number(msg.payload).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 100,
        "wires": [
            [
                "f5a6b7c8.d9e0f1"
            ]
        ]
    },
    {
        "id": "f5a6b7c8.d9e0f1",
        "type": "ui_gauge",
        "z": "b8f3a2e5.7c9d1",
        "name": "Light Gauge",
        "group": "e5408888a673addb",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "<i class='fa fa-lightbulb-o'></i> Light Intensity",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#424242",
            "#00bcd4",
            "#ffeb3b"
        ],
        "seg1": "0.33",
        "seg2": "0.66",
        "diff": false,
        "className": "custom-gauge",
        "x": 490,
        "y": 40,
        "wires": []
    },
    {
        "id": "a6b7c8d9.e0f1a2",
        "type": "ui_chart",
        "z": "b8f3a2e5.7c9d1",
        "name": "Light Chart",
        "group": "e5408888a673addb",
        "order": 2,
        "width": 6,
        "height": 4,
        "label": "Light Intensity Trend",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": true,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#02c4de",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "custom-chart",
        "x": 510,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b7c8d9e0.f1a2b3",
        "type": "mqtt in",
        "z": "b8f3a2e5.7c9d1",
        "name": "Temperature",
        "topic": "medibox/220134K1_temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "a1b2c3d4.e5f6a7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 240,
        "wires": [
            [
                "temp_format_node",
                "d9e0f1a2.b3c4d5",
                "c0d1e2f3.a4b5c6"
            ]
        ]
    },
    {
        "id": "temp_format_node",
        "type": "function",
        "z": "b8f3a2e5.7c9d1",
        "name": "Format Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 200,
        "wires": [
            [
                "c8d9e0f1.a2b3c4"
            ]
        ]
    },
    {
        "id": "c8d9e0f1.a2b3c4",
        "type": "ui_gauge",
        "z": "b8f3a2e5.7c9d1",
        "name": "Temp Gauge",
        "group": "c2d3e4f5.a6b7c8",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "<i class='fa fa-thermometer-half'></i> Temperature",
        "label": "Â°C",
        "format": "{{value}}",
        "min": "-40",
        "max": "80",
        "colors": [
            "#0288d1",
            "#00bcd4",
            "#d81b60"
        ],
        "seg1": "24",
        "seg2": "32",
        "diff": false,
        "className": "custom-gauge",
        "x": 530,
        "y": 220,
        "wires": []
    },
    {
        "id": "d9e0f1a2.b3c4d5",
        "type": "ui_chart",
        "z": "b8f3a2e5.7c9d1",
        "name": "Temp Chart",
        "group": "c2d3e4f5.a6b7c8",
        "order": 2,
        "width": 6,
        "height": 4,
        "label": "Temperature Trend",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00bcd4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "custom-chart",
        "x": 410,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c43952f0ae628664",
        "type": "mqtt in",
        "z": "b8f3a2e5.7c9d1",
        "name": "Humidity",
        "topic": "medibox/220134K1_humidity",
        "qos": "2",
        "datatype": "auto",
        "broker": "a1b2c3d4.e5f6a7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 360,
        "wires": [
            [
                "humidity_format_node",
                "1d4ca3053455f5e5",
                "c0d1e2f3.a4b5c6"
            ]
        ]
    },
    {
        "id": "humidity_format_node",
        "type": "function",
        "z": "b8f3a2e5.7c9d1",
        "name": "Format Humidity",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 360,
        "wires": [
            [
                "621c3feed9f921f0"
            ]
        ]
    },
    {
        "id": "621c3feed9f921f0",
        "type": "ui_gauge",
        "z": "b8f3a2e5.7c9d1",
        "name": "Humidity Gauge",
        "group": "3c0ae7d5cf5735a4",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "<i class='fa fa-tint'></i> Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": [
            "#0288d1",
            "#00bcd4",
            "#f44336"
        ],
        "seg1": "65",
        "seg2": "80",
        "diff": false,
        "className": "custom-gauge",
        "x": 620,
        "y": 360,
        "wires": []
    },
    {
        "id": "1d4ca3053455f5e5",
        "type": "ui_chart",
        "z": "b8f3a2e5.7c9d1",
        "name": "Humidity Chart",
        "group": "3c0ae7d5cf5735a4",
        "order": 2,
        "width": 6,
        "height": 4,
        "label": "Humidity Trend",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00bcd4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "custom-chart",
        "x": 390,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e0f1a2b3.c4d5e6",
        "type": "ui_slider",
        "z": "b8f3a2e5.7c9d1",
        "name": "Sampling Interval",
        "label": "<i class='fa fa-sliders'></i> Sampling Interval (s)",
        "tooltip": "Set sampling interval in seconds",
        "group": "95ee7b702b06215a",
        "order": 1,
        "width": 6,
        "height": 2,
        "passthru": true,
        "outs": "end",
        "topic": "medibox/config/220134K1_ts",
        "topicType": "str",
        "min": "1",
        "max": "60",
        "step": "1",
        "className": "custom-slider",
        "x": 140,
        "y": 480,
        "wires": [
            [
                "f1a2b3c4.d5e6f7"
            ]
        ]
    },
    {
        "id": "f1a2b3c4.d5e6f7",
        "type": "mqtt out",
        "z": "b8f3a2e5.7c9d1",
        "name": "Publish ts",
        "topic": "medibox/config/220134K1_ts",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a1b2c3d4.e5f6a7",
        "x": 360,
        "y": 480,
        "wires": []
    },
    {
        "id": "a2b3c4d5.e6f7a8",
        "type": "ui_slider",
        "z": "b8f3a2e5.7c9d1",
        "name": "Sending Interval",
        "label": "<i class='fa fa-sliders'></i> Sending Interval (s)",
        "tooltip": "Set sending interval in seconds",
        "group": "95ee7b702b06215a",
        "order": 2,
        "width": 6,
        "height": 2,
        "passthru": true,
        "outs": "end",
        "topic": "medibox/config/220134K1_tu",
        "topicType": "str",
        "min": "20",
        "max": "600",
        "step": "1",
        "className": "custom-slider",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "b3c4d5e6.f7a8b9"
            ]
        ]
    },
    {
        "id": "b3c4d5e6.f7a8b9",
        "type": "mqtt out",
        "z": "b8f3a2e5.7c9d1",
        "name": "Publish tu",
        "topic": "medibox/config/220134K1_tu",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a1b2c3d4.e5f6a7",
        "x": 380,
        "y": 520,
        "wires": []
    },
    {
        "id": "c4d5e6f7.a8b9c0",
        "type": "ui_slider",
        "z": "b8f3a2e5.7c9d1",
        "name": "Servo Offset",
        "label": "<i class='fa fa-sliders'></i> Servo Offset (Â°)",
        "tooltip": "Set servo offset in degrees",
        "group": "95ee7b702b06215a",
        "order": 3,
        "width": 6,
        "height": 2,
        "passthru": true,
        "outs": "end",
        "topic": "medibox/config/220134K1_theta_offset",
        "topicType": "str",
        "min": "0",
        "max": "120",
        "step": "1",
        "className": "custom-slider",
        "x": 140,
        "y": 600,
        "wires": [
            [
                "d5e6f7a8.b9c0d1"
            ]
        ]
    },
    {
        "id": "d5e6f7a8.b9c0d1",
        "type": "mqtt out",
        "z": "b8f3a2e5.7c9d1",
        "name": "Publish theta_offset",
        "topic": "medibox/config/220134K1_theta_offset",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a1b2c3d4.e5f6a7",
        "x": 360,
        "y": 600,
        "wires": []
    },
    {
        "id": "e6f7a8b9.c0d1e2",
        "type": "ui_slider",
        "z": "b8f3a2e5.7c9d1",
        "name": "Gamma Value",
        "label": "<i class='fa fa-sliders'></i> Gamma Value",
        "tooltip": "Set gamma value",
        "group": "95ee7b702b06215a",
        "order": 4,
        "width": 6,
        "height": 2,
        "passthru": true,
        "outs": "end",
        "topic": "medibox/config/220134K1_gamma",
        "topicType": "str",
        "min": 0,
        "max": "1",
        "step": "0.01",
        "className": "custom-slider",
        "x": 140,
        "y": 660,
        "wires": [
            [
                "f7a8b9c0.d1e2f3"
            ]
        ]
    },
    {
        "id": "f7a8b9c0.d1e2f3",
        "type": "mqtt out",
        "z": "b8f3a2e5.7c9d1",
        "name": "Publish gamma_val",
        "topic": "medibox/config/220134K1_gamma",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a1b2c3d4.e5f6a7",
        "x": 360,
        "y": 660,
        "wires": []
    },
    {
        "id": "a8b9c0d1.e2f3a4",
        "type": "ui_slider",
        "z": "b8f3a2e5.7c9d1",
        "name": "Ideal Temp",
        "label": "<i class='fa fa-sliders'></i> T_med (Â°C)",
        "tooltip": "Set ideal temperature in Â°C",
        "group": "95ee7b702b06215a",
        "order": 5,
        "width": 6,
        "height": 2,
        "passthru": true,
        "outs": "end",
        "topic": "medibox/config/220134K1_T_med",
        "topicType": "str",
        "min": "10",
        "max": "40",
        "step": "1",
        "className": "custom-slider",
        "x": 140,
        "y": 720,
        "wires": [
            [
                "b9c0d1e2.f3a4b5"
            ]
        ]
    },
    {
        "id": "b9c0d1e2.f3a4b5",
        "type": "mqtt out",
        "z": "b8f3a2e5.7c9d1",
        "name": "Publish T_med",
        "topic": "medibox/config/220134K1_T_med",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a1b2c3d4.e5f6a7",
        "x": 360,
        "y": 720,
        "wires": []
    },
    {
        "id": "c0d1e2f3.a4b5c6",
        "type": "debug",
        "z": "b8f3a2e5.7c9d1",
        "name": "MQTT Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 780,
        "wires": []
    },
    {
        "id": "c1d2e3f4.a5b6c7",
        "type": "ui_template",
        "z": "b8f3a2e5.7c9d1",
        "group": "styling_group",
        "name": "Dashboard Styling",
        "order": 1,
        "width": 6,
        "height": 2,
        "format": "<style>\n  body.nr-dashboard-theme {\n    background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);\n    font-family: 'Inter', 'Roboto', -apple-system, sans-serif;\n    color: #ffffff;\n    margin: 0;\n    padding: 15px;\n    box-sizing: border-box;\n  }\n  .nr-dashboard-card {\n    background: rgba(44, 62, 80, 0.95);\n    border-radius: 12px;\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\n    margin: 12px;\n    padding: 15px;\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    overflow: visible;\n  }\n  .nr-dashboard-card:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4);\n  }\n  .nr-dashboard-cardtitle {\n    color: #ffffff;\n    font-size: 1.2rem;\n    font-weight: 600;\n    margin-bottom: 10px;\n    text-align: center;\n  }\n  .nr-dashboard-gauge, .nr-dashboard-slider, .nr-dashboard-chart, .nr-dashboard-text {\n    color: #ffffff;\n  }\n  .custom-gauge md-card {\n    background: radial-gradient(circle, #34495e 0%, #2c3e50 100%);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    border-radius: 50%;\n    margin: 10px auto;\n    padding: 10px;\n    transition: transform 0.3s ease;\n  }\n  .custom-gauge md-card:hover {\n    transform: scale(1.05);\n  }\n  .custom-chart md-card {\n    background: #2c3e50;\n    border: 2px solid #3498db;\n    border-radius: 8px;\n    margin: 10px auto;\n    padding: 10px;\n    transition: border-color 0.3s ease;\n  }\n  .custom-chart md-card:hover {\n    border-color: #1abc9c;\n  }\n  .custom-slider md-slider {\n    background: #3498db;\n    border-radius: 6px;\n    margin: 10px 0;\n    padding: 5px 0;\n  }\n  .custom-slider md-slider .md-thumb {\n    background: #1abc9c;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.3);\n    width: 20px;\n    height: 20px;\n    transition: background 0.3s ease;\n  }\n  .custom-slider md-slider .md-thumb:hover {\n    background: #16a085;\n  }\n  .custom-slider md-slider .md-track-fill {\n    background: #1abc9c;\n  }\n  .custom-alarm md-card {\n    background: rgba(44, 62, 80, 0.95);\n    border: 2px solid #e74c3c;\n    border-radius: 8px;\n    margin: 12px auto;\n    padding: 20px;\n    transition: border-color 0.3s ease;\n    display: block;\n    overflow: visible;\n  }\n  .custom-alarm md-card:hover {\n    border-color: #c0392b;\n  }\n  .custom-alarm .alarm-text {\n    font-size: 1.4rem;\n    line-height: 1.6;\n    color: #ffffff;\n    text-align: center;\n    white-space: pre-wrap;\n  }\n  .custom-alarm pre {\n    font-size: 1.4rem;\n    line-height: 1.6;\n    color: #ffffff;\n    text-align: center;\n    margin: 0;\n    padding: 10px;\n    background: rgba(0, 0, 0, 0.2);\n    border-radius: 4px;\n  }\n  .dashboard-header {\n    text-align: center;\n    padding: 20px 10px;\n    background: rgba(0, 0, 0, 0.2);\n    border-radius: 12px;\n    margin: 0 12px 20px 12px;\n    position: relative;\n    z-index: 10;\n  }\n  .dashboard-header h2 {\n    margin: 0;\n    font-size: 2rem;\n    font-weight: 700;\n    background: linear-gradient(90deg, #3498db, #1abc9c);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n  @media (max-width: 800px) {\n    body.nr-dashboard-theme {\n      padding: 10px;\n    }\n    .nr-dashboard-card {\n      width: 100% !important;\n      margin: 8px 0;\n      padding: 10px;\n    }\n    .custom-gauge md-card,\n    .custom-chart md-card,\n    .custom-slider,\n    .custom-alarm md-card {\n      width: 100% !important;\n      margin: 8px auto;\n      padding: 15px;\n    }\n    .custom-alarm pre {\n      font-size: 1.2rem;\n      line-height: 1.5;\n    }\n    .nr-dashboard-cardtitle {\n      font-size: 1rem;\n    }\n    .dashboard-header h2 {\n      font-size: 1.5rem;\n    }\n  }\n</style>\n<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css' integrity='sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==' crossorigin='anonymous' referrerpolicy='no-referrer' />\n<link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap' />\n<div class=\"dashboard-header\">\n  <h2>Medibox Dashboard</h2>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 360,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "9075c380d591c323",
        "type": "ui_text",
        "z": "b8f3a2e5.7c9d1",
        "group": "alarms_group",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "f1690ab08b101ecb",
        "type": "inject",
        "z": "b8f3a2e5.7c9d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 630,
        "y": 280,
        "wires": [
            [
                "ede2465c4c5d9dcb"
            ]
        ]
    },
    {
        "id": "ede2465c4c5d9dcb",
        "type": "function",
        "z": "b8f3a2e5.7c9d1",
        "name": "function 1",
        "func": "// Convert timestamp to human-readable format\nlet now = new Date(msg.payload);\nmsg.payload = now.toLocaleString();\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 180,
        "wires": [
            [
                "9075c380d591c323"
            ]
        ]
    },
    {
        "id": "alarm_mqtt_in",
        "type": "mqtt in",
        "z": "b8f3a2e5.7c9d1",
        "name": "Medicine Alarms",
        "topic": "medibox/220134K1_alarms",
        "qos": "2",
        "datatype": "json",
        "broker": "a1b2c3d4.e5f6a7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 900,
        "wires": [
            [
                "alarm_format_node",
                "alarm_debug_node"
            ]
        ]
    },
    {
        "id": "alarm_debug_node",
        "type": "debug",
        "z": "b8f3a2e5.7c9d1",
        "name": "Alarm MQTT Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 960,
        "wires": []
    },
    {
        "id": "alarm_format_node",
        "type": "function",
        "z": "b8f3a2e5.7c9d1",
        "name": "Format Alarm",
        "func": "try {\n    if (Array.isArray(msg.payload)) {\n        if (msg.payload.length === 0) {\n            msg.payload = \"No active alarms\";\n            msg.topic = \"Alarms\";\n            return msg;\n        }\n        msg.payload = msg.payload\n            .map(alarm => `${alarm.emoji || 'ALARM'} TAKE MEDICINE ${alarm.time || 'Unknown Time'}`)\n            .join('\\n');\n        msg.topic = \"Alarms\";\n        return msg;\n    } else if (typeof msg.payload === 'object' && msg.payload !== null && msg.payload.time) {\n        msg.payload = `${msg.payload.emoji || 'ALARM'} TAKE MEDICINE ${msg.payload.time}`;\n        msg.topic = `Alarm ${msg.payload.alarm || 'Unknown'}`;\n        return msg;\n    } else {\n        msg.payload = \"No active alarms\";\n        msg.topic = \"Alarms\";\n        return msg;\n    }\n} catch (e) {\n    msg.payload = \"Error processing alarms: \" + e.message;\n    msg.topic = \"Alarms\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 900,
        "wires": [
            [
                "alarm_display_node"
            ]
        ]
    },
    {
        "id": "alarm_display_node",
        "type": "ui_template",
        "z": "b8f3a2e5.7c9d1",
        "group": "alarms_group",
        "name": "Active Alarms",
        "order": 2,
        "width": 6,
        "height": 7,
        "format": "<div class=\"custom-alarm\">\n    <h3 style=\"color: #ffffff; text-align: center; margin-bottom: 10px;\">Active Alarms</h3>\n    <pre style=\"white-space: pre-wrap; color: #ffffff; font-size: 1.4rem; text-align: center;\">{{msg.payload || 'Waiting for alarms...'}}</pre>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "custom-alarm",
        "x": 480,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "a1b2c3d4.e5f6a7",
        "type": "mqtt-broker",
        "name": "HiveMQ",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "e5408888a673addb",
        "type": "ui_group",
        "name": "LIGHT INTENSITY",
        "tab": "d3e4f5a6.b7c8d9",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c2d3e4f5.a6b7c8",
        "type": "ui_group",
        "name": "TEMPERATURE",
        "tab": "d3e4f5a6.b7c8d9",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c0ae7d5cf5735a4",
        "type": "ui_group",
        "name": "HUMIDITY",
        "tab": "d3e4f5a6.b7c8d9",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "95ee7b702b06215a",
        "type": "ui_group",
        "name": "CONTROLLER",
        "tab": "d3e4f5a6.b7c8d9",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "styling_group",
        "type": "ui_group",
        "name": "STYLING",
        "tab": "d3e4f5a6.b7c8d9",
        "order": 6,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "alarms_group",
        "type": "ui_group",
        "name": "ALARMS",
        "tab": "d3e4f5a6.b7c8d9",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d3e4f5a6.b7c8d9",
        "type": "ui_tab",
        "name": "Medibox Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]